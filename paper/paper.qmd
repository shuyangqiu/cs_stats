---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - First author
  - Another author
thanks: "Code and data are available at: LINK."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: 
  pdf: 
    fig-pos: 'H'
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(arrow)
library(here)
library(knitr)
library(modelsummary)
library(marginaleffects)

data <- read_parquet(here("data/analysis_data/analysis_data.parquet"))
winrates <- readRDS(here("models/winrates.rds"))
```


# Introduction

Modelling and predicting results of competitive sports is a potentially lucrative endeavor and can help provide
insights for competitors, team managers, coaches, and others. Sports betting is a multi-billion dollar industry employing
hundreds of data analysts to create better models and increase market efficiency. On the other hand, sharp bettors are creating their
own models to beat the odds and make fortunes. Meanwhile, teams and coaches can use models to create better rosters and find
the optimal training for their players.

Sports and other physical activities such as horse racing have been the primary focus of bookmakers but esports betting is becoming more popular and 
esports markets are being offered by many major bookmakers such as Pinnacle and Bet365. Since esports are new compared to traditional sports, 
there is relatively little research and the models are of lower quality. 

*CS (Counter-Strike)* is a 5v5 competitive multiplayer game where one team defends a bombsite while the other attempts to plant and detonate a bomb.
Professional *CS* teams compete in tournaments where teams play each other, where the number of maps won determine the winner of the matchup.
In this paper, we created a model predict the estimand, map win rate, using various individual statistics such as K/D (kill/death ratio), ADR (average damage per round), and the total number of rounds played.

We found that some metrics such as K/D have a positive correlation with win rates while other metrics such ADR have negative correlations with win rate.

@sec-data explains the source of the data, how it was collected, how it was cleaned and analyzed, and visualizations of the data. 
@sec-model presents the model used to fit the dataset, the predictors used, and a justification for the model.
@sec-results explains the results of the analysis with visualizations.
@sec-discussion provides discussion on the results of this paper as well as weaknesses and next steps.

# Data {#sec-data}
The data used in this paper was provided by HLTV.org [@hltv], a website that provides *CS* news, information about tournaments, past matches, and player statistics.
Existing datasets for this information are rare and their measurement criteria are not clear, so the dataset used for this paper was constructed.
Player statistics and match data were scraped from HLTV.org using Python [@python] and the `selenium` [@Selenium] and `BeautifulSoup` [@bs4] libraries.

The win/loss data used is from all matches played between October 16, 2023 and April 17, 2024 in *CS:2 (Counter-Strike: 2)* tournaments with prize pools of at least $100,000. The player data used are lifetime statistics and include matches played in both *CS:GO (Counter-Strike: Global Offensive)* and *CS:2*. The lifetime statistics also include data from matches not used in the win/loss data.

The raw data was then cleaned and analyzed using statistical programming language R [@r] and the `tidyverse` [@tidyverse], `janitor` [@janitor], `arrow` [@arrow], `stanarm` [@rstanarm], `knitr` [@knitr], `modelsummary` [@modelsummary], `marginaleffects` [@marginaleffects], and `here` [@here] libraries.

The final dataset consists of 445 players with a cumulative 9855 maps played across 22 tournaments. For each player, the dataset contains the number of tournament maps won and lost. A map is won if their team wins 13 of the first 24 rounds or if they win 4 out of 6 rounds in overtime.
The dataset also contains the number of kills, deaths, HS% (headshot percentage), ADR, and the total number of rounds played. These statistics are measured over 
the player's professional career. HS% is measured as the proportion of kills where the killing blow is a headshot and ADR is measured as the total damage done to
enemies divided by the number of rounds played.

@fig-maps shows the distribution of the number of tournament maps played while @fig-maps-wl-1 and @fig-maps-wl-2 show the distributions of the number of wins and losses respectively.
The median number of maps played is 12 and teams typically play a minimum of 4 maps per tournament (2 best of 1s and a best of 3 elimination match),
indicating most players have short tournament runs or are not invited. This can also be seen in @fig-maps-wl-2 where the most common number of maps won are 0 to 1,
indicating those players have been knocked out early in every tournament they played.
```{r}
#| label: fig-maps
#| fig-cap: Number of tournament maps played with median
#| echo: false
data |> 
  ggplot(aes(x = games_played)) +
  geom_histogram(binwidth = 2) +
  labs(x = "Number of Tournament Maps Played", y = "Number of Players") +
  theme_classic() +
  geom_vline(aes(xintercept = median(games_played)),
            color = "black",
            linetype = "dashed",
            linewidth = 1)
```
```{r}
#| layout-ncol: 2
#| label: fig-maps-wl
#| fig-cap: 
#|  - Number of tournament maps won
#|  - Number of tournament maps lost
#| echo: false
data |> 
  ggplot(aes(x = win)) +
  geom_histogram(binwidth = 2) +
  labs(x = "Number of Tournament Maps Won", y = "Number of Players") +
  theme_classic()

data |> 
  ggplot(aes(x = loss)) +
  geom_histogram(binwidth = 2) +
  labs(x = "Number of Tournament Maps Lost", y = "Number of Players") +
  theme_classic()
```

@fig-kdr shows the distribution of Kill/Death ratios. The median is slightly above the average of 1.0, 
indicating players in tournaments with significant prize pools are better than the average professional player, as expected. @fig-kd-1 and @fig-kd-2 shows the distributions of lifetime kills and deaths respectively.
```{r}
#| label: fig-kdr
#| fig-cap: Kill/Death ratios with median
#| echo: false
data |> 
  ggplot(aes(x = kill_death_ratio)) +
  geom_histogram(binwidth = 0.02) +
  labs(x = "Kill/Death Ratio", y = "Number of Players") +
  theme_classic() +
  geom_vline(aes(xintercept = median(kill_death_ratio)),
            color = "black",
            linetype = "dashed",
            linewidth = 1)
```

```{r}
#| layout-ncol: 2
#| label: fig-kd
#| fig-cap: 
#|  - Number of kills
#|  - Number of deaths
#| echo: false
data |> 
  ggplot(aes(x = kills)) +
  geom_histogram(binwidth = 1000) +
  labs(x = "Kills", y = "Number of Players") +
  theme_classic()

data |> 
  ggplot(aes(x = deaths)) +
  geom_histogram(binwidth = 1000) +
  labs(x = "Deaths", y = "Number of Players") +
  theme_classic()
```

@fig-adr shows the distribution of ADR. Each player has 100 health
and on average, less than 5 enemies will be killed each round, so we expect the ADR to be less than 100. 


```{r}
#| label: fig-adr
#| fig-cap: Distribution of ADR
#| echo: false
data |> 
  ggplot(aes(x = adr)) +
  geom_histogram(binwidth = 1) +
  labs(x = "ADR", y = "Number of Players") +
  theme_classic()
```

@fig-hs shows the distribution of headshot percentages. A professional *CS* team typically has 4 riflers and 1 AWPer[^1], where riflers aim for the head to do more damage while AWPers are more likely to aim for the chest since it is a larger area and they will kill in a single shot regardless. This could explain why the players are distributed with a left skew.
[^1]: An AWP is a powerful but expensive sniper rifle, capable of killing in one shot to the chest
```{r}
#| label: fig-hs
#| fig-cap: Distribution of Headshot Percentage
#| echo: false
data |> 
  ggplot(aes(x = hs)) +
  geom_histogram(binwidth = 1) +
  labs(x = "Headshot %", y = "Number of Players") +
  theme_classic()
```
@fig-rounds shows the total number of rounds played.
```{r}
#| label: fig-rounds
#| fig-cap: Number of rounds played
#| echo: false
data |> 
  ggplot(aes(x = rounds)) +
  geom_histogram(binwidth = 1000) +
  labs(x = "Rounds Played", y = "Number of Players") +
  theme_classic()
```

# Model {#sec-model}
## Model set-up

The regression model used was:
\begin{align} 
y_i|\pi_i, &\sim \mbox{Bern}(\pi_i) \\
\mbox{logit}(\pi_i) &= \beta_0 + \beta_1 \times \mbox{K/D}_i + \beta_2 \times \mbox{ADR}_i + \beta_3 \times \mbox{HS \%}_i + \beta_4 \times \mbox{Rounds played}_i\\
\beta_0 &\sim \mbox{Normal}(0, 2.5) \\
\beta_1 &\sim \mbox{Normal}(0, 2.5) \\
\beta_2 &\sim \mbox{Normal}(0, 2.5) \\
\beta_3 &\sim \mbox{Normal}(0, 2.5) \\
\beta_4 &\sim \mbox{Normal}(0, 2.5)
\end{align}

where $y_i$ is 1 if player $i$ will win a map and 0 if they will lose.
$\mbox{K/D}_i$ is the kill/death ratio of the player, $\mbox{ADR}_i$ is the 
player's ADR, $\mbox{HS \%}$ is the player's headshot percentage, and $\mbox{Rounds played}_i$ is the total number of rounds played by player $i$.

## Model justification

The outcome of any map played is binary, so a logistic regression model was chosen. 

The outcome of each round can often be decided by the outcome of 1v1 duels. Thus, the outcome of a map can be decided by many 1v1 duels.
K/D is the number of enemies killed on average per death, indicating the ability for a player to win fights. Since
rounds can be won by killing all enemies, we expect K/D to be positively correlated with win rates. 

Doing damage to enemies can result in kills by the player or make it easier for their teammates to kill the enemies. 
Doing more damage in a round is clearly beneficial for winning the round and thus the map, so we expect ADR to be positively correlated with 
win rates.

HS% is a metric of the player's mechanical skill, which should be part of determining their ability to win fights.
Then similar to K/D, we should also expect HS% to be positively correlated with win rates.

The number of rounds played can be used to determine the experience of a player, with more experienced players having played more rounds.
Additionally, better players should play in the professional scene more, so they should have more rounds played in total.
Given these factors, we expect the number of rounds played to be positively correlated with win rates.

# Results {#sec-results}
@fig-kdr-wr shows the relationship between K/D and map win rates with a line provided by the linear regression model.
The overall relationships in this figure and following figures are difficult to see using only data points due to the number and distribution.
However, the regression line suggests there is a positive correlation between K/D and win rate, as expected when constructing the model.

```{r}
#| label: fig-kdr-wr
#| fig-cap: Win rate by kill/death ratio with regression line
#| echo: false
plot_predictions(winrates, condition = "kill_death_ratio") +
  geom_point(data = data, aes(x = kill_death_ratio, y = win_percent), alpha = 0.5) +
  labs(x = "Kill/Death Ratio", y = "Win Rate") +
  theme_classic()
```

@fig-hs-wr shows the relationship between HS% and map win rates with a line provided by the linear regression model.
The regression line suggests there is a positive correlation between HS% and win rate, as expected when constructing the model.
```{r}
#| label: fig-hs-wr
#| fig-cap: Win rate by headshot percentage with regression line
#| echo: false
plot_predictions(winrates, condition = "hs") +
  geom_point(data = data, aes(x = hs, y = win_percent), alpha = 0.5) +
  labs(x = "Headshot Percentage", y = "Win Rate") +
  theme_classic()
```
@fig-adr-wr shows the relationship between ADR and map win rates with a line provided by the linear regression model.
Interestingly, the regression line suggests there is a negative correlation between ADR and win rate.
This appears to be counterintuitive since more damage is generally good. An explanation for this could be 
overaggressive players deal more damage but leave their teams in a worse position, leading to lower win rates. 
Another explanation could be "baiting", where a player waits for their team members to distract enemies in order to have easier kills,
allowing them to stay alive, inflating their personal stats but reducing the chance for their team to win.
```{r}
#| label: fig-adr-wr
#| fig-cap: Win rate by ADR with regression line
#| echo: false
plot_predictions(winrates, condition = "adr") +
  geom_point(data = data, aes(x = adr, y = win_percent), alpha = 0.5) +
  labs(x = "Average Damage per Round", y = "Win Rate") +
  theme_classic()
```
@fig-rounds-wr shows the relationship between total number of rounds played and map win rates with a line provided by the linear regression model.
The regression line suggests there is a positive relationship between total rounds played and win rate, as expected when constructing the model.
```{r}
#| label: fig-rounds-wr
#| fig-cap: Win rate by total rounds played with regression line
#| echo: false
plot_predictions(winrates, condition = "rounds") +
  geom_point(data = data, aes(x = rounds, y = win_percent), alpha = 0.5) +
  labs(x = "Rounds Played", y = "Win Rate") +
  theme_classic()
```
@tbl-model shows the model coefficients. Note this is not standardized, so the coefficient for K/D is large since a $\pm$ 0.1 change in K/D is a large difference whereas the coefficient for number of rounds is tiny since a change of $\pm$ 1 round played is practically nothing.

@fig-model-confidence shows the confidence intervals for the model predictors.
```{r}
#| label: tbl-model
#| tbl-cap: Player win rate based on K/D, HS%, ADR, and rounds played
#| echo: false
#| warning: false

modelsummary(
  list("Tournament Map Win Rate" = winrates),
  statistic = "mad",
  fmt = 6
  )
```

# Discussion{#sec-discussion}

## Impacts of an individual on team performance {#sec-discussion-1}
As seen in @sec-results, some of the predictors we chose, K/D, HS%, and total rounds played, are positively correlated with win rate
whereas ADR is unexpectedly negatively correlated with win rate. In a game where killing all members of the enemy team is a win condition,
it is clear that individual metrics such as K/D are an important part of a team's overall performance.
However, it is also obvious that a team's performance can not purely be explained by an individual's stats. 

*CS* is a team game, every individual has 4 teammates they must work with to win. But even considering every numerical stat for all team members is not
sufficient to fully determine a team's success. Similar to physical sports, there are too many other factors to build a perfect model based only on hard numbers.
Every round of *CS* has many tactical decisions that must be made. Poor strategies and bad shotcalling can ruin a team's chances at winning while
good decision making and communication can make a player invaluable to a team.

For example, Finn "karrigan" Andersen currently plays on FaZe, a top ranking team having just won a large tournament, IEM Chengdu 2024.
On paper, karrigan is worse than the rest of his team and many of his competitors with a 0.89 K/D and 43.8% HS%, but he is the
IGL (in game leader) for FaZe. As IGL, he provides strategies and makes decisions for the rest of his team, allowing them to more effective.
Many other top *CS* teams also have IGLs, who will typically be older and have more experience, but have worse stats. 

In summary, individual player stats can be a helpful way to predict their impact on a team's performance, but it never tells the full story.
This is applicable to *CS* as well as physical sports and other esports.

## Weaknesses and next steps

As stated in @sec-discussion-1, *CS* is a team game and the current model attempts to predict a team's win rate based only on individual's stats.
This limits the predictive power of the model and a next step would be to include the remaining teammate's statistics in the model. 
This would allow us to predict win rates based on all the members of a team and would also allow us to see how players with different stats
interact and effect the team. 

A team's win rate does not exist in a vacuum, it must play against another team. Currently, the model is not very useful as it only gives
an overall win rate. A much more useful model would give the win rate for a match against another team. A next step would be to include
the statistics of the enemy team's players in the model. This would allow us to see some of the interactions between teams and bring the model much closer
to something bookmakers and professional sports bettors would use.

One major flaw are the lifetime statistics. These help provide some ways to measure a player's performance but many of these may be
outdated, but are still included. Many players have been playing for years and their past performance may
no longer be relevant due changes to the game itself or age and declining physical abilities. The model could likely be improved by
limiting the lifetime statistics to more recent ones. 

Finally, the current model uses only 4 predictors. Many other statistics could be added such as number of opening kills (first kill of the round) and opening deaths.
As stated in @sec-data for the explanation of @fig-hs, the HS% could be dependent on the weapons used, so weapons used could be included as an interaction variable.

\newpage

\appendix

# Appendix {-}
```{r}
#| label: fig-model-confidence
#| fig-cap: Confidence intervals for predictors win rate
#| echo: false

modelplot(winrates, conf_level = 0.95) +
  labs(x = "95 percent confidence interval")
```
# References


